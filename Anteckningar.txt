Föreläsning 1
Variabler av typen string

https://www.w3schools.com/cs/cs_variables.php

Alla variabler måste ha en datatyp i C#

Syntax för att skapa en variabel
datatyp  namn = värde;

Man kan lägga till saker med +

x = x + y
Är samma sak som:
x += y

******************************




Föreläsning 2
Datatypen int och double

int = heltal
double = decimaltal (flyttal)
när du skriver decimaltal i koden måste du använda . (punkt) och inte kommatecken!

https://www.w3schools.com/cs/cs_data_types.php

inbyggda datatyper i C#:
https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/built-in-types

viktigaste:
string
int
double
char
bool = sant eller falsk true eller false

När man jobbar med tal (numeriska operander) kan du använda operatorer
https://learn.microsoft.com/sv-se/bonsai/inkling/operators/arithmetic

+, -, *, /

även resten (modulo) = % Kommer förklara detta mer i kommande föreläsningar.


******************************

Föreläsning 3
Styrande satser
if-satser
else-if
else


En ifsats kan nästlas
Alltså, läggas inuti varandra

Flera logiska uttryck kan kombineras med && samt ||

https://www.tutorialsteacher.com/csharp/csharp-if-else
https://www.w3schools.com/cs/cs_conditions.php
https://www.c-sharpcorner.com/article/c-sharp-if-else-statement/


Jämförelseoperander
https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators
https://learn.microsoft.com/sv-se/bonsai/inkling/operators/comparison



******************************

Föreläsning 4
Arrayer
https://www.w3schools.com/cs/cs_arrays.php
https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/arrays/
https://www.tutorialsteacher.com/csharp/array-csharp

När en variabel kan ha flera värden av samma sort
Deklareras genom att sätta [] efter datatypen
int[] minaTal;
string[] minaSträngar;
double[] minaDecimaltal;

För att de ska fungera måste du skapa ett objekt samt säga hur många fack du ska ha.
minaTal = new int[4]; 



Om du vill titta på alla värden. Använd en loop

Ska du enbart titta på alla värden? Då är Foreach smart

string[] fruits = {"banan", "citron", "kiwi", "melon"};

foreach (string fruit in fruits)
{
    MessageBox.Show(fruit);
}

Ibland behöver du dock ändra värden i loopen, eller kanske ta den baklänges. Då är for-loopen bra.

https://www.w3schools.com/cs/cs_for_loop.php

for (int i = 0; i < fruits.Length; i += 2)
{
    MessageBox.Show(fruits[i]);
}


******************************

Föreläsning 5
Metoder
https://www.w3schools.com/cs/cs_methods.php
https://www.geeksforgeeks.org/c-sharp-methods/

DRY -> Don't repeat yourself
En metod ska ha en uppgift att lösa. Inte flera olika

Lösningen ligger ofta i att skapa metoder

En metod är något som vi gör
en egenskap är något som beskriver hur jag är


en variabel:
datatyp variabelnamn plus eventuellt startvärde

int number = 0;

En metod skapas på ungefär liknande sätt

accessor returvärde (datatyp) metodnamn (noll, en eller flera parametrar)

returvärde kan vara void = ingenting returneras
annars returneras en datatyp likt int, double, bool osv

En metod kan ha oändligt med indataparametrar.

En metod kan överlagras. Det betyder att du kan ha flera olika varianter av metoden. För att detta ska fungera måste den ha olika
indata, eller utdata

Om du vill bryta en metod, använd return.
Return bryter även en loop.

Switch Case
Om en if-sats har många kontrollpunkter och de baseras på konstanta värden. Då kan CASE vara snyggar och mer lättläst
https://www.w3schools.com/cs/cs_switch.php
https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/statements/selection-statements
https://www.tutorialsteacher.com/csharp/csharp-switch